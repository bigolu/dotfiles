#!/usr/bin/env fish

function _tmux_nest
  if not set --query TMUX
    echo -e (set_color red) 'You must be in a tmux session to use this.' (set_color normal) >/dev/stderr
    return
  end

  # optional -h/--help, can't be specified with any other flags
  # optional -o/--overwrite
  # 0 or more -c/--command, must have a value
  # optional name
  argparse --exclusive 'help,command' --exclusive 'help,overwrite' --max-args 1 'h/help' 'o/overwrite' 'c/command=+' -- $argv
  or return

  if test (count $_flag_help) -gt 0
    echo -e \
      "\
tmux-nest
Start a nested tmux session with the specified commands running in separate windows.

USAGE:
  tmux-nest [OPTIONS] [SESSION_NAME]

OPTIONS:
  -c, --command
    The command to run in a window. An empty string will start an interactive shell. Can be specified more than once to open a window for each command. If not provided, one window running an interactive shell will be created.

  -o, --overwrite
    If a session with the given name already exists, it will be removed and a new one will be made.

  -h, --help
    Print this message.

ARGUMENTS:
  SESSION_NAME
    The name for the new session. If not provided, the name defaults to '<current_session_name>-tasks'. \
      "
    return
  end

  # No session name specified so generate one
  if test (count $argv) -eq 0
    set current_session_name (tmux display-message -p '#{session_name}')
    set new_session_name "$current_session_name-tasks"
  else
    set new_session_name $argv[1]
  end

  if tmux has-session -t $new_session_name 2>/dev/null
    # overwrite was not specified
    if test (count $_flag_overwrite) -eq 0
      TMUX= tmux attach-session -t $new_session_name
      return
    end

    tmux kill-session -t $new_session_name
  end

  # TODO: escape quotes in commands maybe

  if test (count $_flag_command) -ne 0
    tmux new-session -d -s $new_session_name "fish -C '$_flag_command[1]'"
    for command in $_flag_command[2..]
      tmux new-window -d -t "$new_session_name:" "fish -C '$command'"
    end
  else
    tmux new-session -d -s $new_session_name "fish"
  end

  TMUX= tmux attach-session -t $new_session_name
end

_tmux_nest $argv
