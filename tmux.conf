# allow mouse use
set-option -g mouse on
# let colors pass through
set -g default-terminal "tmux-256color"
# disallow tmux from renaming windows, this way my custom name isn't overwritten
set-option -g allow-rename off
set-option -g renumber-windows on
bind-key -n MouseDrag1Status swap-window -d -t=
setw -g aggressive-resize on
set -s escape-time 0
# have window indices start from 1
set -g base-index 1
# I need some way of knowing when I am currently attached to a tmux session
set-environment -g IN_TMUX 1
set -g prefix C-Space
set -g focus-events on

# Create a new window using the current pane's directory as the new window's directory
bind c new-window -c "#{pane_current_path}"
# split panes horizontally/vertically using the current pane's directory as the new pane's directory
bind '|' split-window -h -c '#{pane_current_path}'
bind '-' split-window -v -c '#{pane_current_path}'
# reload
bind r run-shell 'tmux source ~/.tmux.conf && tmux display-message "Reloaded TMUX..."'
# use alt/meta + arrow to navigate windows
bind-key -n M-Left previous-window
bind-key -n M-Right next-window
bind-key -n M-H previous-window
bind-key -n M-L next-window
# toggle zoom on pane
bind-key -n M-m resize-pane -Z
bind -n M-/ split-window -fv -l 25% "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse --preview='tmux list-windows -t {}' --prompt='sessions> ' --info=hidden | xargs tmux switch-client -t"

# popup
bind -n M-t if-shell -F '#{==:#{session_name},popup}' {
   detach-client
} {
   display-popup -E -d '#{pane_current_path}' -w90% -h90% -- "tmux attach -t popup || tmux new -s popup"
}

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n M-j if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n M-k if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n M-l if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'

# status bar configuration
#######################################
set -g status-position 'bottom'
set -g pane-border-status bottom
set -g pane-border-format ''
set -g @activecolor 'cyan'
set -g @inactivecolor 'brightblack'
set -g @bordercolor 'black'
set -g @standoutcolor 'yellow'
# Panes
set -g pane-border-lines heavy
set -g pane-active-border-style "fg=#{@activecolor}"
set -g pane-border-style "fg=#{@bordercolor}"
# Clock Mode
setw -g clock-mode-colour 'cyan'
# Messages
set -g message-style "bg=terminal,fg=#{@activecolor}"
set -g message-command-style "bg=#{@bordercolor},fg=#{@altcolor}"
# Bars
set -g status-interval 1
set -g status on
set -g status-style "bg=terminal,fg=#{@bordercolor},nostrikethrough,italics"
set -g status-right ""
set -g status-left-length 40
set -g status-left "#[align=left,nostrikethrough,fg=#{@bordercolor}]#[fg=#{@activecolor}]#{?client_prefix,#[bold#,fg=#{@standoutcolor}]-- PREFIX MODE --#[fg=#{@activecolor}],tmux:#S}#[fg=#{@bordercolor}] "
# Windows
set -g status-justify right
set -g window-status-format "#[nostrikethrough,fg=#{@bordercolor}]#[fg=#{@inactivecolor}]#I:#W#[fg=#{@bordercolor}] "
set -g window-status-current-format "#[nostrikethrough,fg=#{@bordercolor}]#[#{?window_zoomed_flag,fg=#{@standoutcolor},fg=#{@activecolor}}]#I:#W#F#[fg=#{@bordercolor}]"
set -g window-status-separator "#[fg=black,nostrikethrough] / "

# Plugins
#######################################
# tmux plugin manager
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
    set -g @scroll-without-changing-pane "on"
    set -g @emulate-scroll-for-no-mouse-alternate-buffer "on"
# allows saving the state of tmux to a file so it can be restored later
set -g @plugin 'tmux-plugins/tmux-resurrect'
    set -g @resurrect-processes '"~watch" mosh-client'
# auto reload ~/.tmux.conf when it changes
set-option -g @plugin 'b0o/tmux-autoreload'
# Uses tmux-resurrect to continuously save the current tmux session at a specified interval.
# NOTE: continuum must be the last plugin listed: https://github.com/tmux-plugins/tmux-continuum#known-issues
set -g @plugin 'tmux-plugins/tmux-continuum'
    set -g @continuum-restore 'on' # Automatically restore session when tmux is started
    set -g @continuum-save-interval '1' # measured in minutes
# Start the plugin manager
run '~/.tmux/plugins/tpm/tpm'
