# split panes horizontally/vertically
bind | split-window -h -c '#{pane_current_path}'
bind _ split-window -v -c '#{pane_current_path}'
# reload
bind R run-shell 'tmux source ~/.tmux.conf && echo "tmux reloaded"'
# close session
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session
# new tab
bind T new-window -c "#{pane_current_path}"

# allow mouse use
set-option -g mouse on
# let colors pass through
set -g default-terminal "xterm-256color"
# disallow tmux from renaming windows, this way my custom name isn't overwritten
set-option -g allow-rename off

# use alt/meta + arrow to navigate windows
bind-key -n M-Left previous-window
bind-key -n M-RIght next-window

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Plugins
#######################################
# tmux plugin manager
set -g @plugin 'tmux-plugins/tpm'
# status bar configuration
set -g @plugin "bigolu/nord-tmux"
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
    set -g @scroll-without-changing-pane "on"
    set -g @emulate-scroll-for-no-mouse-alternate-buffer "on"
# allows saving the state of tmux to a file so it can be restored later
set -g @plugin 'tmux-plugins/tmux-resurrect'
# Uses tmux-resurrect to continuously save the current tmux session at a specified interval.
# NOTE: continuum must be the last plugin listed: https://github.com/tmux-plugins/tmux-continuum#known-issues
set -g @plugin 'tmux-plugins/tmux-continuum'
    set -g @continuum-restore 'on' # Automatically restore session when tmux is started
    set -g @continuum-save-interval '1' # measured in minutes
# Start the plugin manager
run '~/.tmux/plugins/tpm/tpm'
