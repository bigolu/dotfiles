name: Publish Shell Executable
on:
  push:
    paths:
      - '.github/workflows/publish-shell-executable.yml'
      - 'flake.nix'
      - 'flake.lock'
      - 'flake-modules/**'
      - 'dotfiles/**'
    branches:
      - master
env:
  # The checkout action clones the repository into github.workspace. I set $HOME to github.workspace so that the
  # directory structure matches that of the machine I tested this on, where the repository is in $HOME/.dotfiles.
  HOME: ${{ github.workspace }}
jobs:
  publish-executable:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
      fail-fast: false
    defaults:
      run:
        working-directory: './.dotfiles'
    steps:
      - uses: actions/checkout@v4
        with:
          path: '.dotfiles'
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: cachix/cachix-action@v14
        with:
          name: bigolu
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          # TODO: This isn't working right now:
          # https://github.com/cachix/cachix-action/issues/169
          useDaemon: false
      - run: nix run --show-trace .#nix -- bundle --show-trace --bundler .# .#shellMinimal
      - run: NIXPKGS_ALLOW_UNFREE=1 nix run --show-trace .#nix -- bundle --impure --show-trace --bundler .# .#terminalMinimal
      # Dereference the symlinks so I can upload the actual executables. The symlinks' names will
      # look like '<name>-x86_64-linux' so I'm using a glob pattern to match
      # them.
      - run: |
          mkdir tmp
          cp -L shell-* ./tmp/
          cp -L terminal-* ./tmp/
      - run: |
          size="$(du -m ./tmp/shell-* | cut -f1)"
          max_size='250'
          if (( "$size" > "$max_size" )); then
          echo "Shell is too big: $size MB. Max size: $max_size"
            exit 1
          fi
      - name: Upload executable
        uses: svenstaro/upload-release-action@v2
        with:
          file: '${{ env.HOME }}/.dotfiles/tmp/*'
          file_glob: true
          overwrite: true
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: v0.0.1
